{"ast":null,"code":"import _asyncToGenerator from \"/Users/linibm/Desktop/LazyNotes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * When hardwareBackButton: false in config,\n * we need to make sure we also block the default\n * webview behavior. If we don't then it will be\n * possible for users to navigate backward while\n * an overlay is still open. Additionally, it will\n * give the appearance that the hardwareBackButton\n * config is not working as the page transition\n * will still happen.\n */\nconst blockHardwareBackButton = () => {\n  document.addEventListener('backbutton', () => {}); // eslint-disable-line\n};\n\nconst startHardwareBackButton = () => {\n  const doc = document;\n  let busy = false;\n  doc.addEventListener('backbutton', () => {\n    if (busy) {\n      return;\n    }\n    let index = 0;\n    let handlers = [];\n    const ev = new CustomEvent('ionBackButton', {\n      bubbles: false,\n      detail: {\n        register(priority, handler) {\n          handlers.push({\n            priority,\n            handler,\n            id: index++\n          });\n        }\n      }\n    });\n    doc.dispatchEvent(ev);\n    const executeAction = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (handlerRegister) {\n        try {\n          if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\n            const result = handlerRegister.handler(processHandlers);\n            if (result != null) {\n              yield result;\n            }\n          }\n        } catch (e) {\n          console.error(e);\n        }\n      });\n      return function executeAction(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    const processHandlers = () => {\n      if (handlers.length > 0) {\n        let selectedHandler = {\n          priority: Number.MIN_SAFE_INTEGER,\n          handler: () => undefined,\n          id: -1\n        };\n        handlers.forEach(handler => {\n          if (handler.priority >= selectedHandler.priority) {\n            selectedHandler = handler;\n          }\n        });\n        busy = true;\n        handlers = handlers.filter(handler => handler.id !== selectedHandler.id);\n        executeAction(selectedHandler).then(() => busy = false);\n      }\n    };\n    processHandlers();\n  });\n};\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\n\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, startHardwareBackButton };","map":{"version":3,"names":["blockHardwareBackButton","document","addEventListener","startHardwareBackButton","doc","busy","index","handlers","ev","CustomEvent","bubbles","detail","register","priority","handler","push","id","dispatchEvent","executeAction","_ref","_asyncToGenerator","handlerRegister","result","processHandlers","e","console","error","_x","apply","arguments","length","selectedHandler","Number","MIN_SAFE_INTEGER","undefined","forEach","filter","then","OVERLAY_BACK_BUTTON_PRIORITY","MENU_BACK_BUTTON_PRIORITY"],"sources":["/Users/linibm/Desktop/LazyNotes/node_modules/@ionic/core/components/hardware-back-button.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n/**\n * When hardwareBackButton: false in config,\n * we need to make sure we also block the default\n * webview behavior. If we don't then it will be\n * possible for users to navigate backward while\n * an overlay is still open. Additionally, it will\n * give the appearance that the hardwareBackButton\n * config is not working as the page transition\n * will still happen.\n */\nconst blockHardwareBackButton = () => {\n    document.addEventListener('backbutton', () => { }); // eslint-disable-line\n};\nconst startHardwareBackButton = () => {\n    const doc = document;\n    let busy = false;\n    doc.addEventListener('backbutton', () => {\n        if (busy) {\n            return;\n        }\n        let index = 0;\n        let handlers = [];\n        const ev = new CustomEvent('ionBackButton', {\n            bubbles: false,\n            detail: {\n                register(priority, handler) {\n                    handlers.push({ priority, handler, id: index++ });\n                },\n            },\n        });\n        doc.dispatchEvent(ev);\n        const executeAction = async (handlerRegister) => {\n            try {\n                if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\n                    const result = handlerRegister.handler(processHandlers);\n                    if (result != null) {\n                        await result;\n                    }\n                }\n            }\n            catch (e) {\n                console.error(e);\n            }\n        };\n        const processHandlers = () => {\n            if (handlers.length > 0) {\n                let selectedHandler = {\n                    priority: Number.MIN_SAFE_INTEGER,\n                    handler: () => undefined,\n                    id: -1,\n                };\n                handlers.forEach((handler) => {\n                    if (handler.priority >= selectedHandler.priority) {\n                        selectedHandler = handler;\n                    }\n                });\n                busy = true;\n                handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\n                executeAction(selectedHandler).then(() => (busy = false));\n            }\n        };\n        processHandlers();\n    });\n};\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\n\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, startHardwareBackButton };\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,uBAAuB,GAAGA,CAAA,KAAM;EAClCC,QAAQ,CAACC,gBAAgB,CAAC,YAAY,EAAE,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC;;AACD,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAClC,MAAMC,GAAG,GAAGH,QAAQ;EACpB,IAAII,IAAI,GAAG,KAAK;EAChBD,GAAG,CAACF,gBAAgB,CAAC,YAAY,EAAE,MAAM;IACrC,IAAIG,IAAI,EAAE;MACN;IACJ;IACA,IAAIC,KAAK,GAAG,CAAC;IACb,IAAIC,QAAQ,GAAG,EAAE;IACjB,MAAMC,EAAE,GAAG,IAAIC,WAAW,CAAC,eAAe,EAAE;MACxCC,OAAO,EAAE,KAAK;MACdC,MAAM,EAAE;QACJC,QAAQA,CAACC,QAAQ,EAAEC,OAAO,EAAE;UACxBP,QAAQ,CAACQ,IAAI,CAAC;YAAEF,QAAQ;YAAEC,OAAO;YAAEE,EAAE,EAAEV,KAAK;UAAG,CAAC,CAAC;QACrD;MACJ;IACJ,CAAC,CAAC;IACFF,GAAG,CAACa,aAAa,CAACT,EAAE,CAAC;IACrB,MAAMU,aAAa;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,eAAe,EAAK;QAC7C,IAAI;UACA,IAAIA,eAAe,KAAK,IAAI,IAAIA,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACP,OAAO,EAAE;YAC3F,MAAMQ,MAAM,GAAGD,eAAe,CAACP,OAAO,CAACS,eAAe,CAAC;YACvD,IAAID,MAAM,IAAI,IAAI,EAAE;cAChB,MAAMA,MAAM;YAChB;UACJ;QACJ,CAAC,CACD,OAAOE,CAAC,EAAE;UACNC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QACpB;MACJ,CAAC;MAAA,gBAZKN,aAAaA,CAAAS,EAAA;QAAA,OAAAR,IAAA,CAAAS,KAAA,OAAAC,SAAA;MAAA;IAAA,GAYlB;IACD,MAAMN,eAAe,GAAGA,CAAA,KAAM;MAC1B,IAAIhB,QAAQ,CAACuB,MAAM,GAAG,CAAC,EAAE;QACrB,IAAIC,eAAe,GAAG;UAClBlB,QAAQ,EAAEmB,MAAM,CAACC,gBAAgB;UACjCnB,OAAO,EAAEA,CAAA,KAAMoB,SAAS;UACxBlB,EAAE,EAAE,CAAC;QACT,CAAC;QACDT,QAAQ,CAAC4B,OAAO,CAAErB,OAAO,IAAK;UAC1B,IAAIA,OAAO,CAACD,QAAQ,IAAIkB,eAAe,CAAClB,QAAQ,EAAE;YAC9CkB,eAAe,GAAGjB,OAAO;UAC7B;QACJ,CAAC,CAAC;QACFT,IAAI,GAAG,IAAI;QACXE,QAAQ,GAAGA,QAAQ,CAAC6B,MAAM,CAAEtB,OAAO,IAAKA,OAAO,CAACE,EAAE,KAAKe,eAAe,CAACf,EAAE,CAAC;QAC1EE,aAAa,CAACa,eAAe,CAAC,CAACM,IAAI,CAAC,MAAOhC,IAAI,GAAG,KAAM,CAAC;MAC7D;IACJ,CAAC;IACDkB,eAAe,CAAC,CAAC;EACrB,CAAC,CAAC;AACN,CAAC;AACD,MAAMe,4BAA4B,GAAG,GAAG;AACxC,MAAMC,yBAAyB,GAAG,EAAE,CAAC,CAAC;;AAEtC,SAASA,yBAAyB,EAAED,4BAA4B,EAAEtC,uBAAuB,EAAEG,uBAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}